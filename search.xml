<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JAVA常规练习]]></title>
    <url>%2F2020%2F06%2F01%2FJAVA%E5%B8%B8%E8%A7%84%E6%93%8D%E4%BD%9C.html</url>
    <content type="text"><![CDATA[题1(数组)：使用Scanner输入n个数(小于100)，并将之升序输出。 1234567891011121314151617import java.util.Scanner;import java.util.Arrays;public class haha &#123; public static void main(String[] args)&#123; Scanner reader = new Scanner(System.in); int n = reader.nextInt(); float[] xiang = new float[n]; for(int i=0;i&lt;n;i++) &#123; xiang[i] = reader.nextFloat(); &#125; Arrays.sort(xiang); for(int i=0;i&lt;n;i++) &#123; System.out.println(xiang[i]); &#125; &#125;&#125; 题2(继承)：（1）编写一个圆类Circle，该类拥有：①一个成员变量Radius（私有，浮点型）； // 存放圆的半径；②两个构造方法 Circle( ) // 将半径设为0 Circle(double r ) //创建Circle对象时将半径初始化为r③ 三个成员方法 double getArea( ) //获取圆的面积 double getPerimeter( ) //获取圆的周长 void show( ) //将圆的半径、周长、面积输出到屏幕（2）编写一个圆柱体类Cylinder，它继承于上面的Circle类。还拥有：①一个成员变量 double hight（私有，浮点型）； // 圆柱体的高；②构造方法 Cylinder (double r, double h ) //创建Circle对象时将半径初始化为r③ 成员方法 double getVolume( ) //获取圆柱体的体积 void showVolume( ) //将圆柱体的体积输出到屏幕编写应用程序，创建类的对象，分别设置圆的半径、圆柱体的高，计算并分别显示圆半径、圆面积、圆周长，圆柱体的体积。 Circle.java: 123456789101112131415161718192021222324252627package haha;public class Circle &#123; private double Radius; public Circle() &#123; Radius=0; &#125; public Circle(double r) &#123; Radius=r; &#125; public double getArea()&#123; return Math.PI*Math.pow(Radius, 2); &#125; public double getPerimeter()&#123; return 2*Math.PI*Radius; &#125; public void show() &#123; System.out.println("圆半径："+Radius); System.out.println("圆面积："+this.getArea()); System.out.println("圆周长:"+this.getPerimeter()); &#125;&#125; Cylinder.java 123456789101112131415161718192021222324package haha;public class Cylinder extends Circle &#123; private double hight; public Cylinder(double r,double h)&#123; super(r); hight = h; &#125; public double getVolume()&#123; return super.getArea()*hight; &#125; public void showVolume()&#123; System.out.println("圆柱体体积："+this.getVolume()); &#125; public static void main(String[] args) &#123; Cylinder obj = new Cylinder(1,1); obj.show(); obj.showVolume(); &#125;&#125; 题3(抽象类)]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[conda基本操作]]></title>
    <url>%2F2020%2F05%2F29%2Fconda%E6%93%8D%E4%BD%9C.html</url>
    <content type="text"><![CDATA[conda可以说是每个学习python的人都应该了解的。当我们安装python包，或者创建环境的时候都会和它打交道。为了帮助大家对conda有一个更好的了解，下面总结了一些关于conda的命令行操作。主要是关于conda换源问题以及conda虚拟环境操作问题。那下面就开始吧！.0.0. window环境下conda查包1conda list conda配置情况查询1conda info conda换源123conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --set show_channel_urls yes conda换回默认源1conda config --remove-key channels conda虚拟环境创建1conda create -n your_env_name python=X.X conda虚拟环境激活1activate your_env_name(虚拟环境名称) conda查询环境信息1conda env list conda关闭虚拟环境1deactivate conda删除虚拟环境1conda remove -n your_env_name(虚拟环境名称) --all conda删除虚拟环境中的某些包1conda remove --name your_env_name package_name Linux环境下如果与windows环境下操作方式相同的，则以下不再赘述。 conda虚拟环境激活1source activate your_env_name(虚拟环境名称) conda关闭虚拟环境1source deactivate conda换源在终端输入： 1vim ~/.condarc 这样就进入了conda源的配置文件了。下面（选择其一就好）将文件改为： 清华源： 123456channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ssl_verify: true 中科大源： 12345channels: - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/ - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/ - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/ssl_verify: true 上交源： 12345channels: - https://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/main/ - https://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/free/ - https://mirrors.sjtug.sjtu.edu.cn/anaconda/cloud/conda-forge/ssl_verify: true 参考文献： https://zhuanlan.zhihu.com/p/87123943 https://blog.csdn.net/sean2100/article/details/80998643 https://blog.csdn.net/lyy14011305/article/details/59500819 https://blog.csdn.net/weixin_34613450/article/details/87457631]]></content>
      <categories>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>conda命令行</tag>
      </tags>
  </entry>
</search>
